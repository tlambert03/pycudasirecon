# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

# https://peps.python.org/pep-0621/
[project]
name = "pycudasirecon"
description = "3D structured illumination microscopy reconstruction using CUDA"
keywords = [
    "structured",
    "illumination",
    "microscopy",
    "reconstruction",
    "CUDA",
]
readme = "README.md"
requires-python = ">=3.7"
license = { text = "MIT" }
authors = [{ name = "Talley Lambert", email = "talley.lambert@gmail.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: GPU :: NVIDIA CUDA",
    "Framework :: napari",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering",
]
dynamic = ["version"]
dependencies = ["numpy", "pydantic<2", "tifffile", "typing_extensions"]

# extras
# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
test = ["pytest", "pytest-cov", "cupy"]

[project.urls]
Source = "https://github.com/tlambert03/pycudasirecon"
Tracker = "https://github.com/tlambert03/pycudasirecon/issues"
Documentation = "https://talleylambert.com/pycudasirecon"

[project.entry-points."napari.manifest"]
pycudasirecon = "pycudasirecon:napari.yaml"

# https://hatch.pypa.io/latest/config/metadata/
[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/pycudasirecon/_version.py"

# https://hatch.pypa.io/latest/config/build/#file-selection
[tool.hatch.build.targets.sdist]
include = ["/src", "/tests"]


# https://github.com/charliermarsh/ruff
[tool.ruff]
line-length = 88
target-version = "py38"
src = ["src/pycudasirecon", "tests"]
select = [
    "E", # style errors
    "F", # flakes
    "D", # pydocstyle
    "I", # isort
    "UP", # pyupgrade
    # "N",  # pep8-naming
    "S",    # bandit
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
]
ignore = [
    "D100", # Missing docstring in public module
    "D107", # Missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line
    "D400", # First line should end with a period
    "D413", # Missing blank line after last section
    "D416", # Section name should end with a colon
]

[tool.ruff.per-file-ignores]
"tests/*.py" = ["D", "S"]

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
filterwarnings = ["error"]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/*/*.py"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true

[[tool.mypy.overrides]]
module = ['pycudasirecon._napari', "pycudasirecon._libwrap"]
ignore_errors = true

# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "raise AssertionError",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
]
[tool.coverage.run]
source = ['src/pycudasirecon']

# https://github.com/mgedmin/check-manifest#configuration
[tool.check-manifest]
ignore = [
    ".pre-commit-config.yaml",
    ".ruff_cache/**/*",
    "tests/**/*",
    "setup.py",
    "docs/**/*",
    "environment.yml",
    "src/pycudasirecon/_version.py"
]
